class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https://github.com/astral-sh/uv"
  url "https://github.com/astral-sh/uv/archive/refs/tags/0.1.31.tar.gz"
  sha256 "26797aa67030585d9fb00ddc8900ad05e0030f33d5dac2413045301b5c3efeea"
  license any_of: ["Apache-2.0", "MIT"]
  head "https://github.com/astral-sh/uv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "4bb7ce2ae72f9af0a38541b22352107d325908b5085f64e2ecd878dc9b17e937"
    sha256 cellar: :any,                 arm64_ventura:  "79c5773a55b1397397fa37191cc27c214843258e6c67aaa0934cf6938491a81d"
    sha256 cellar: :any,                 arm64_monterey: "789bc7d3e82e3aa9a869e3b1a1b1a172ec04b1f6deab24db59aed365d72132c2"
    sha256 cellar: :any,                 sonoma:         "711c6bb2671505d97b0ca5f4766a3694af40df53c91c38a5c5296b70fe81a5a3"
    sha256 cellar: :any,                 ventura:        "f78e2246f59ef54f1538f69786561f36dc8499c60dee065c8e56e9855395041c"
    sha256 cellar: :any,                 monterey:       "6267cda70b920faa0b6d95c5bff08832d4d20999aa3819f0ccc48b81c7f44237"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "5e3ce55ca6e63381d15fe70c58bc621be6f7c0832bf0cf25b8f0f7f85ac109e5"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "crates/uv")
    generate_completions_from_executable(bin/"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath/"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}/uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_lib/shared_library("libgit2"),
      Formula["openssl@3"].opt_lib/shared_library("libssl"),
      Formula["openssl@3"].opt_lib/shared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin/"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end
