class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https://github.com/astral-sh/uv"
  url "https://github.com/astral-sh/uv/archive/refs/tags/0.1.27.tar.gz"
  sha256 "36a4e6e16d2be5e8890c35d2d25c77d2f8b692d8b5e7d7707c27342a0affc3ac"
  license any_of: ["Apache-2.0", "MIT"]
  head "https://github.com/astral-sh/uv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "43773bdca8e7b299bb10892353a448435c7e9d4bbb7cb14d5bbbf4ca96f6dedf"
    sha256 cellar: :any,                 arm64_ventura:  "2021855b143c277a734a72d8c6540ff3d9cd8e1771fccf604c4bbed4b70fb719"
    sha256 cellar: :any,                 arm64_monterey: "c8cd0cc14a0a28db8951c2fa182e2a6a330bcabebffc42f80c98884b093d9ba1"
    sha256 cellar: :any,                 sonoma:         "34e17deb8e42748478b5c28666471ca8b69e00ba4395dc3ef51f94f9b6261c4f"
    sha256 cellar: :any,                 ventura:        "5f9a6c4524ca5f463d4f9bf6cc859817f5d08fa6dc83c5a4c84968aa8c81f8fc"
    sha256 cellar: :any,                 monterey:       "9ffb8743a8199f138e7bda21f7cb61facdcc2d64139d909789c6db0bf9184d51"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "de0156f24c7f29d1c3ed7b585df993fd0a8643681d4744a6d9aceb0591c92026"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "crates/uv")
    generate_completions_from_executable(bin/"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath/"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}/uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_lib/shared_library("libgit2"),
      Formula["openssl@3"].opt_lib/shared_library("libssl"),
      Formula["openssl@3"].opt_lib/shared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin/"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end
