class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https://github.com/astral-sh/uv"
  url "https://github.com/astral-sh/uv/archive/refs/tags/0.1.25.tar.gz"
  sha256 "187ca77d5ce1a643737a2f3f2a6ed4fbc96165498afa898a873eda3736d42124"
  license any_of: ["Apache-2.0", "MIT"]
  head "https://github.com/astral-sh/uv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "40f6c0661e4236d33a86ed86a1f6efc014e2dab737db6eefe61f3e71187c669e"
    sha256 cellar: :any,                 arm64_ventura:  "c36b39ae55b84532bea832a5c64bbf6ec0e32a767af8b923ef3716802b85648f"
    sha256 cellar: :any,                 arm64_monterey: "6be4ec3ef728dc1815d42cbf25489b9b26d819ae22ae2eb19904b39858f43c00"
    sha256 cellar: :any,                 sonoma:         "0c72b0b4568b914376a5899f7a4e6f9d65b3df506f9aedaccff05962635bf144"
    sha256 cellar: :any,                 ventura:        "748cef8d4ec53d7030b52b335ff37022436e8fc9db2bf1bde7538873b66a720c"
    sha256 cellar: :any,                 monterey:       "2cdf0e6cc89562f4dffc4cae6dfc8b4263e4001bf4b2553f4365df1f1aad3206"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "b28f1f168647807c2a47efb29c3d113268ebbfa9229fee9e491f1dd2251a879d"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "crates/uv")
    generate_completions_from_executable(bin/"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath/"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}/uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_lib/shared_library("libgit2"),
      Formula["openssl@3"].opt_lib/shared_library("libssl"),
      Formula["openssl@3"].opt_lib/shared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin/"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end
