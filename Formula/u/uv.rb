class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https://github.com/astral-sh/uv"
  url "https://github.com/astral-sh/uv/archive/refs/tags/0.1.8.tar.gz"
  sha256 "f4176f352e3aff352cd8f5054229be175eee73b962234d3b20a363491b8d8f0e"
  license any_of: ["Apache-2.0", "MIT"]
  head "https://github.com/astral-sh/uv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "fd2a2d38795732e7bbfa34e2af05a84d0e867fe4a45f949bcc175caa5162af26"
    sha256 cellar: :any,                 arm64_ventura:  "90cedfabb792b798bb9157feaf9daf08d1dee1d4585aaecb97754d994bd60790"
    sha256 cellar: :any,                 arm64_monterey: "fc6dd51e44db249fffb0ac39a3f60e7a41098f3b16ccef823dc2632ee6aa6f30"
    sha256 cellar: :any,                 sonoma:         "4721df63c3e410e35469935888136f1c83bb00503ebcea2bc11c3a30835dea3a"
    sha256 cellar: :any,                 ventura:        "69fd19a660cbe48e12419b776643fac20f9c25af0de430c2e60990a78938e609"
    sha256 cellar: :any,                 monterey:       "c4bb230ba1af149eed011bd6e1d2cf8ba575144fb9b6954487eecd4db7f35045"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "9b6e19a700a052baca865c36ef86c503391ba895c985f4e98b5253ece6a50f6e"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "crates/uv")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath/"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}/uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_lib/shared_library("libgit2"),
      Formula["openssl@3"].opt_lib/shared_library("libssl"),
      Formula["openssl@3"].opt_lib/shared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin/"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end
